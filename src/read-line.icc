/* Inline Functions for read-line.{h,cc}.

   Copyright (C) 1989-1998, 2002 Free Software Foundation, Inc.
   Written by Douglas C. Schmidt <schmidt@ics.uci.edu>
   and Bruno Haible <bruno@clisp.org>.

   This file is part of GNU GPERF.

   GNU GPERF is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   GNU GPERF is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; see the file COPYING.
   If not, write to the Free Software Foundation, Inc.,
   59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

// This needs:
//#include <stdio.h>
//#include "getline.h"

/* Initializes the instance with a given input stream.  */
INLINE
Read_Line::Read_Line (FILE *stream)
  : _fp (stream)
{
}

/* Reads the next line and returns it, excluding the terminating newline,
   and ignoring lines starting with '#'.  Returns NULL on error or EOF.
   The storage for the string is dynamically allocated and must be freed
   through delete[].  */
INLINE char *
Read_Line::read_next_line ()
{
  int c;

  while ((c = getc (_fp)) == '#')
    {
      while (c = getc (_fp), c != EOF && c != '\n')
        ;

      if (c == EOF)
        return NULL;
    }

  if (c == EOF)
    return NULL;

  ungetc (c, stdin);

  char *line = NULL;
  size_t linesize = 0;
  int length = get_line (&line, &linesize, _fp);
  if (length < 0)
    {
      delete[] line;
      return NULL;
    }
  if (length > 0 && line[length - 1] == '\n')
    line[length - 1] = '\0';
  return line;
}
